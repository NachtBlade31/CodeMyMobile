{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var createUser = function createUser(user) {\n  return fetch(\"\".concat(API, \"/api/user/addNewUser\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json'\n    },\n    body: user\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listUserWithPagination = function listUserWithPagination(skip, limit) {\n  var data = {\n    limit: limit,\n    skip: skip\n  };\n  return fetch(\"\".concat(API, \"/api/user/allUsers\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var singleUser = function singleUser(firstName) {\n  return fetch(\"\".concat(API, \"/api/user/\").concat(firstName), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listRelated = function listRelated(user) {\n  console.log(user.user);\n  return fetch(\"\".concat(API, \"/api/user/fof/\").concat(user.user.firstName), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user.user._id, user.user.friends)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/kshit/OneDrive/Desktop/Web Development/CodeMyMobile/frontend/actions/user.js"],"names":["fetch","API","createUser","user","method","headers","Accept","body","then","response","json","err","console","log","listUserWithPagination","skip","limit","data","JSON","stringify","singleUser","firstName","listRelated","_id","friends"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAChC,SAAOH,KAAK,WAAIC,GAAJ,2BAA+B;AACvCG,IAAAA,MAAM,EAAE,MAD+B;AAEvCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH,KAF8B;AAKvCC,IAAAA,IAAI,EAAEJ;AALiC,GAA/B,CAAL,CAOFK,IAPE,CAOG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GATE,WAUI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAVP,CAAP;AAWH,CAZM;AAcP,OAAO,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAOC,KAAP,EAAiB;AACnD,MAAMC,IAAI,GAAG;AACTD,IAAAA,KAAK,EAALA,KADS;AACFD,IAAAA,IAAI,EAAJA;AADE,GAAb;AAGA,SAAOf,KAAK,WAAIC,GAAJ,yBAA6B;AACrCG,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAF4B;AAMrCC,IAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAeF,IAAf;AAN+B,GAA7B,CAAL,CAQFT,IARE,CAQG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAhBM;AAkBP,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAAAC,SAAS,EAAI;AACnC,SAAOrB,KAAK,WAAIC,GAAJ,uBAAoBoB,SAApB,GAAiC;AACzCjB,IAAAA,MAAM,EAAE;AADiC,GAAjC,CAAL,CAGFI,IAHE,CAGG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,WAMI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GANP,CAAP;AAOH,CARM;AAUP,OAAO,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACnB,IAAD,EAAU;AACjCS,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACA,IAAjB;AACA,SAAOH,KAAK,WAAIC,GAAJ,2BAAwBE,IAAI,CAACA,IAAL,CAAUkB,SAAlC,GAA+C;AACvDjB,IAAAA,MAAM,EAAE,MAD+C;AAEvDC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAF8C;AAMvDC,IAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAehB,IAAI,CAACA,IAAL,CAAUoB,GAAzB,EAA8BpB,IAAI,CAACA,IAAL,CAAUqB,OAAxC;AANiD,GAA/C,CAAL,CAQFhB,IARE,CAQG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAdM","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const createUser = (user) => {\r\n    return fetch(`${API}/api/user/addNewUser`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json'\r\n        },\r\n        body: user\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listUserWithPagination = (skip, limit) => {\r\n    const data = {\r\n        limit, skip\r\n    }\r\n    return fetch(`${API}/api/user/allUsers`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const singleUser = firstName => {\r\n    return fetch(`${API}/api/user/${firstName}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const listRelated = (user) => {\r\n    console.log(user.user)\r\n    return fetch(`${API}/api/user/fof/${user.user.firstName}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user.user._id, user.user.friends)\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}